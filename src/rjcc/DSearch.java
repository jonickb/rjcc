/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rjcc;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author User
 */
public class DSearch extends javax.swing.JDialog {

    /**
     * Creates new form DSearch
     */
    private final String[] values;
    ArrayList ids = new ArrayList();
    boolean wid = false;
    
    DefaultListModel listModel = new DefaultListModel();
    public DSearch(java.awt.Frame parent, boolean modal, ArrayList n, boolean wid) {
        super(parent, modal);        
        initComponents();
        this.wid = wid;
        listModel.removeAllElements();
        ids.clear();
        jList1.setModel(listModel);                
        values = new String[n.size()];
        if (wid){
            int index = 0;
            String str = "";
            for (int i=0; i<n.size(); i++){
                index = n.get(i).toString().indexOf('$');
                ids.add(n.get(i).toString().substring(0, index));
                str = n.get(i).toString().substring(index+1, n.get(i).toString().length());
                listModel.addElement(str);
                values[i] = str;
                }
        } else {
            for (int i=0; i<n.size(); i++){
                listModel.addElement(n.get(i));
                values[i] = n.get(i).toString();
                }    
        }
    }
public void filterModel(DefaultListModel<String> model, String filter) {
    for (String s : values) {
        if (!s.toUpperCase().startsWith(filter.toUpperCase())) {
            if (model.contains(s)) {
                model.removeElement(s);
            }
        } else {
            if (!model.contains(s)) {
                model.addElement(s);
            }
        }
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Поиск");
        setModal(true);
        setPreferredSize(new java.awt.Dimension(300, 200));
        setResizable(false);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        getContentPane().add(jTextField1, java.awt.BorderLayout.PAGE_START);

        jList1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        filterModel(listModel, jTextField1.getText());       
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2){
            MainFrame.RESULT = jList1.getSelectedValue();
            if (wid) MainFrame.RID = ids.get(jList1.getSelectedIndex()).toString();
            dispose();}
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
            dispose();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            MainFrame.RESULT = jList1.getSelectedValue();
            if (wid) MainFrame.RID = ids.get(jList1.getSelectedIndex()).toString();
            dispose();
        }
    }//GEN-LAST:event_jList1KeyPressed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
